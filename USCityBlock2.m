function [allData, scenario, sensors] = USCityBlock2()
%USCityBlock2 - Returns sensor detections
%    allData = USCityBlock2 returns sensor detections in a structure
%    with time for an internally defined scenario and sensor suite.
%
%    [allData, scenario, sensors] = USCityBlock2 optionally returns
%    the drivingScenario and detection generator objects.

% Generated by MATLAB(R) 9.11 (R2021b) and Automated Driving Toolbox 3.4 (R2021b).
% Generated on: 21-Mar-2022 06:56:14

% Create the drivingScenario object and ego car
[scenario, egoVehicle] = createDrivingScenario;

% Create all the sensors
[sensors, numSensors] = createSensors(scenario);

allData = struct('Time', {}, 'ActorPoses', {}, 'ObjectDetections', {}, 'LaneDetections', {}, 'PointClouds', {}, 'INSMeasurements', {});
running = true;
while running

    % Generate the target poses of all actors relative to the ego vehicle
    poses = targetPoses(egoVehicle);
    % Get the state of the ego vehicle
    actorState = state(egoVehicle);
    time  = scenario.SimulationTime;

    objectDetections = {};
    laneDetections   = [];
    ptClouds = {};
    insMeas = {};
    isValidTime = false(1, numSensors);
    isValidLaneTime = false(1, numSensors);
    isValidPointCloudTime = false(1, numSensors);
    isValidINSTime = false(1, numSensors);

    % Generate detections for each sensor
    for sensorIndex = 1:numSensors
        sensor = sensors{sensorIndex};
        % Generate the ego vehicle lane boundaries
        if isa(sensor, 'visionDetectionGenerator')
            maxLaneDetectionRange = min(500,sensor.MaxRange);
            lanes = laneBoundaries(egoVehicle, 'XDistance', linspace(-maxLaneDetectionRange, maxLaneDetectionRange, 101));
        end
        type = getDetectorOutput(sensor);
        if strcmp(type, 'Objects only')
            [objectDets, numObjects, isValidTime(sensorIndex)] = sensor(poses, time);
            objectDetections = [objectDetections; objectDets(1:numObjects)]; %#ok<AGROW>
        elseif strcmp(type, 'Lanes only')
            [laneDets, ~, isValidTime(sensorIndex)] = sensor(lanes, time);
            laneDetections   = [laneDetections laneDets]; %#ok<AGROW>
        elseif strcmp(type, 'Lanes and objects')
            [objectDets, numObjects, isValidTime(sensorIndex), laneDets, ~, isValidLaneTime(sensorIndex)] = sensor(poses, lanes, time);
            objectDetections = [objectDetections; objectDets(1:numObjects)]; %#ok<AGROW>
            laneDetections   = [laneDetections laneDets]; %#ok<AGROW>
        elseif strcmp(type, 'Lanes with occlusion')
            [laneDets, ~, isValidLaneTime(sensorIndex)] = sensor(poses, lanes, time);
            laneDetections   = [laneDetections laneDets]; %#ok<AGROW>
        elseif strcmp(type, 'PointCloud')
            if sensor.HasRoadsInputPort
                rdmesh = roadMesh(egoVehicle,min(500,sensor.MaxRange));
                [ptCloud, isValidPointCloudTime(sensorIndex)] = sensor(poses, rdmesh, time);
            else
                [ptCloud, isValidPointCloudTime(sensorIndex)] = sensor(poses, time);
            end
            ptClouds = [ptClouds; ptCloud]; %#ok<AGROW>
        elseif strcmp(type, 'INSMeasurement')
            insMeasCurrent = sensor(actorState, time);
            insMeas = [insMeas; insMeasCurrent]; %#ok<AGROW>
            isValidINSTime(sensorIndex) = true;
        end
    end

    % Aggregate all detections into a structure for later use
    if any(isValidTime) || any(isValidLaneTime) || any(isValidPointCloudTime) || any(isValidINSTime)
        allData(end + 1) = struct( ...
            'Time',       scenario.SimulationTime, ...
            'ActorPoses', actorPoses(scenario), ...
            'ObjectDetections', {objectDetections}, ...
            'LaneDetections', {laneDetections}, ...
            'PointClouds',   {ptClouds}, ... %#ok<AGROW>
            'INSMeasurements',   {insMeas}); %#ok<AGROW>
    end

    % Advance the scenario one time step and exit the loop if the scenario is complete
    running = advance(scenario);
end

% Restart the driving scenario to return the actors to their initial positions.
restart(scenario);

% Release all the sensor objects so they can be used again.
for sensorIndex = 1:numSensors
    release(sensors{sensorIndex});
end

%%%%%%%%%%%%%%%%%%%%
% Helper functions %
%%%%%%%%%%%%%%%%%%%%

% Units used in createSensors and createDrivingScenario
% Distance/Position - meters
% Speed             - meters/second
% Angles            - degrees
% RCS Pattern       - dBsm

function [sensors, numSensors] = createSensors(scenario)
% createSensors Returns all sensor objects to generate detections

% Assign into each sensor the physical and radar profiles for all actors
profiles = actorProfiles(scenario);
sensors{1} = lidarPointCloudGenerator('SensorIndex', 1, ...
    'UpdateInterval', 0.01, ...
    'SensorLocation', [1.5 0], ...
    'ActorProfiles', profiles);
sensors{2} = drivingRadarDataGenerator('SensorIndex', 2, ...
    'UpdateRate', 100, ...
    'MountingLocation', [3.7 0 0.2], ...
    'RangeLimits', [0 100], ...
    'TargetReportFormat', 'Detections', ...
    'HasElevation', true, ...
    'Profiles', profiles);
sensors{3} = insSensor('TimeInput', true, ...
    'MountingLocation', [1.5 0 0]);
numSensors = 3;

function [scenario, egoVehicle] = createDrivingScenario
% createDrivingScenario Returns the drivingScenario defined in the Designer

% Construct a drivingScenario object.
scenario = drivingScenario;

% Add all road segments
roadCenters = [76.4 -110.5 -0.01;
    -22.6 -110.5 -0.01;
    -112.6 -110.5 -0.01;
    -184 -110.5 -0.01;
    -240.77 -110.5 0];
marking = [laneMarking('Unmarked')
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Unmarked')];
laneSpecification = lanespec(4, 'Width', [0.65 3.85 3.85 0.65], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road');

roadCenters = [-240.77 0 0;
    -184.6 0 -0.01;
    -112.6 0 -0.01;
    -20.34 0 -0.01;
    76.4 0 -0.01];
marking = [laneMarking('Unmarked')
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Unmarked')];
laneSpecification = lanespec(4, 'Width', [0.65 3.85 3.85 0.65], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road1');

roadCenters = [199 108 0;
    166.4 108 -0.01;
    74.58 108 -0.01;
    -20.38 108 -0.01;
    -112.6 108 -0.01;
    -202.6 108 -0.01;
    -242.15 108 0];
marking = [laneMarking('Unmarked')
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Unmarked')];
laneSpecification = lanespec(4, 'Width', [0.65 3.85 3.85 0.65], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road2');

roadCenters = [166.4 -151.67 0;
    166.4 108 -0.01;
    166.4 148.33 0];
marking = [laneMarking('Unmarked')
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Unmarked')];
laneSpecification = lanespec(4, 'Width', [0.65 3.85 3.85 0.65], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road3');

roadCenters = [76.4 104 -0.01;
    76.4 0 -0.01;
    76.4 -110.5 -0.01;
    76.4 -151.67 0];
marking = [laneMarking('Unmarked')
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Unmarked')];
laneSpecification = lanespec(4, 'Width', [0.65 3.85 3.85 0.65], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road4');

roadCenters = [-20.52 -106.5 -0.01;
    -20.38 0 -0.01;
    -20.01 108 -0.01;
    -20.01 148.33 0];
marking = [laneMarking('Unmarked')
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Unmarked')];
laneSpecification = lanespec(5, 'Width', [0.73 3.77 3.77 4.5 0.73], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road5');

roadCenters = [-112.6 148.33 0;
    -112.6 108 -0.01;
    -112.6 0 -0.01;
    -112.6 -110.5 -0.01;
    -112.6 -151.67 0];
marking = [laneMarking('Unmarked')
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Unmarked')];
laneSpecification = lanespec(4, 'Width', [0.65 3.85 3.85 0.65], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road6');

roadCenters = [-202.6 148.33 0;
    -202.8 108 -0.01;
    -202.002 95.1997 -0.01;
    -201.701 85.396 -0.01;
    -201.118 75.0835 -0.01;
    -198.9 65.159 -0.01;
    -196.199 55.6373 -0.01;
    -192.877 45.9306 -0.01;
    -189.399 35.8963 -0.01;
    -186.874 25.9599 -0.01;
    -184.971 15.1573 -0.01;
    -184.6 0 -0.01;
    -184.6 -110.5 -0.01;
    -184.6 -151.67 0];
marking = [laneMarking('Unmarked')
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Unmarked')];
laneSpecification = lanespec(4, 'Width', [0.65 3.85 3.85 0.65], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road7');

roadCenters = [72.1 148.33 0;
    72.1 112 -0.01];
marking = [laneMarking('Unmarked')
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Unmarked')];
laneSpecification = lanespec(4, 'Width', [0.65 3.85 3.85 0.65], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road8');

roadCenters = [-22.6 -151.67 0;
    -22.5 -114.5 -0.01];
marking = [laneMarking('Unmarked')
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Unmarked')];
laneSpecification = lanespec(4, 'Width', [0.65 3.85 3.85 0.65], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road9');

roadCenters = [76.4 -1.25 -0.01;
    199 -1.25 0];
marking = [laneMarking('Unmarked')
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid', 'Width', 0.13)
    laneMarking('Unmarked')];
laneSpecification = lanespec(4, 'Width', [0.65 3.85 3.85 3.15], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road10');

roadCenters = [199 -112.5 -0.01;
    166.4 -112.5 -0.01;
    76.4 -110.5 -0.01];
marking = [laneMarking('Unmarked')
    laneMarking('Solid')
    laneMarking('Dashed', 'Width', 0.13, 'Length', 1.5, 'Space', 3)
    laneMarking('Solid')
    laneMarking('Unmarked')];
laneSpecification = lanespec(4, 'Width', [0.65 3.85 3.85 0.65], 'Marking', marking);
road(scenario, roadCenters, 'Lanes', laneSpecification, 'Name', 'Road11');

% Add the barriers
barrierCenters = [164.7 146.95 0;
    162.3 146.95 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier');

barrierCenters = [167.55 146.95 0;
    165.15 146.95 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier2');

barrierCenters = [170.4 146.95 0;
    168 146.95 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier3');

barrierCenters = [164.7 -150.15 0;
    162.3 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier7');

barrierCenters = [167.55 -150.15 0;
    165.15 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier8');

barrierCenters = [170.4 -150.15 0;
    168 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier9');

barrierCenters = [197.05 -110.85 0;
    197.05 -108.45 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier11');

barrierCenters = [197.05 -114.2 0;
    197.05 -111.8 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier13');

barrierCenters = [197.05 -116.54 0;
    197.05 -114.14 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier14');

barrierCenters = [197.05 1.7 0;
    197.05 4.1 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier18');

barrierCenters = [197.05 -1.15 0;
    197.05 1.25 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier19');

barrierCenters = [197.05 -4 0;
    197.05 -1.6 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier20');

barrierCenters = [-240.5 -108.85 0;
    -240.5 -106.45 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier21');

barrierCenters = [197.05 109.7 0;
    197.05 112.1 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier22');

barrierCenters = [197.05 -6.8 0;
    197.05 -4.4 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier24');

barrierCenters = [197.05 106.85 0;
    197.05 109.25 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier27');

barrierCenters = [197.05 104.05 0;
    197.05 106.45 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier28');

barrierCenters = [-240.5 -111.7 0;
    -240.5 -109.3 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier31');

barrierCenters = [-240.5 -114.55 0;
    -240.5 -112.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier32');

barrierCenters = [-240.1 1.7 0;
    -240.1 4.1 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier36');

barrierCenters = [-240.1 -1.15 0;
    -240.1 1.25 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier37');

barrierCenters = [-240.1 -4 0;
    -240.1 -1.6 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier38');

barrierCenters = [-242.15 109.7 0;
    -242.15 112.1 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier43');

barrierCenters = [-242.15 106.85 0;
    -242.15 109.25 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier44');

barrierCenters = [-242.15 104.05 0;
    -242.15 106.45 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier45');

barrierCenters = [74.6 -150.15 0;
    72.2 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier48');

barrierCenters = [77.45 -150.15 0;
    75.05 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier49');

barrierCenters = [80.3 -150.15 0;
    77.9 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier50');

barrierCenters = [-24.05 -150.15 0;
    -26.45 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier54');

barrierCenters = [-21.5 -150.15 0;
    -23.9 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier55');

barrierCenters = [-18.65 -150.15 0;
    -21.05 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier56');

barrierCenters = [-114.1 -150.15 0;
    -116.5 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier59');

barrierCenters = [-111.25 -150.15 0;
    -113.65 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier60');

barrierCenters = [-108.4 -150.15 0;
    -110.8 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier61');

barrierCenters = [70.45 147.35 0;
    68.05 147.35 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier66');

barrierCenters = [76.65 147.5 -0.15;
    74.25 147.5 -0.15];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier68');

barrierCenters = [73.65 147.5 -0.15;
    71.25 147.5 -0.15];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier69');

barrierCenters = [-24.05 146.45 0;
    -26.45 146.45 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier70');

barrierCenters = [-20.95 146.45 0;
    -23.35 146.45 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier71');

barrierCenters = [-17.45 146.45 0;
    -19.85 146.45 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier72');

barrierCenters = [-114.1 147.6 0;
    -116.5 147.6 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier75');

barrierCenters = [-111.25 147.6 0;
    -113.65 147.6 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier76');

barrierCenters = [-108.4 147.6 0;
    -110.8 147.6 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier77');

barrierCenters = [-14.25 146.45 0;
    -16.65 146.45 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier84');

barrierCenters = [-186.3 -150.15 0;
    -188.7 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier88');

barrierCenters = [-183.45 -150.15 0;
    -185.85 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier89');

barrierCenters = [-180.6 -150.15 0;
    -183 -150.15 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier90');

barrierCenters = [-204.4 147.4 0;
    -206.8 147.4 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier94');

barrierCenters = [-201.55 147.4 0;
    -203.95 147.4 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier95');

barrierCenters = [-198.7 147.4 0;
    -201.1 147.4 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [195 210 215] / 255, 'Name', 'Barrier96');

barrierCenters = [43.379 -2.1307 0;
    44.921 -3.9693 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier101');

barrierCenters = [40.35 -0.55 0;
    37.95 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier102');

barrierCenters = [43.15 -1.3 0;
    40.75 -1.3 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier103');

barrierCenters = [37.7 -0.55 0;
    35.3 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier104');

barrierCenters = [35.05 -0.55 0;
    32.65 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier105');

barrierCenters = [32.4 -0.55 0;
    30 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier106');

barrierCenters = [29.65 -0.55 0;
    27.25 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier107');

barrierCenters = [27 -0.55 0;
    24.6 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier108');

barrierCenters = [24.35 -0.55 0;
    21.95 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier109');

barrierCenters = [21.7 -0.55 0;
    19.3 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier110');

barrierCenters = [19.15 -0.55 0;
    16.75 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier111');

barrierCenters = [16.5 -0.55 0;
    14.1 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier112');

barrierCenters = [13.85 -0.55 0;
    11.45 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier113');

barrierCenters = [11.2 -0.55 0;
    8.8 -0.55 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier114');

barrierCenters = [7.698 -0.397 0;
    6.322 -2.363 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier115');

barrierCenters = [5.438 -2.067 0;
    4.062 -4.033 0];
barrier(scenario, barrierCenters, ...
    'ClassID', 5, ...
    'Width', 0.61, ...
    'Height', 0.81, ...
    'Mesh', driving.scenario.jerseyBarrierMesh, 'PlotColor', [227 99 97] / 255, 'Name', 'Barrier116');

% Add the ego vehicle
egoVehicle = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [10.5 2.2 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car');
waypoints = [10.5 2.2 0;
    62.7 2.4 0];
speed = [30;30];
smoothTrajectory(egoVehicle, waypoints, speed);

% Add the non-ego actors
car1 = vehicle(scenario, ...
    'ClassID', 1, ...
    'Position', [77.9 -25.7 0], ...
    'Mesh', driving.scenario.carMesh, ...
    'Name', 'Car1');
waypoints = [77.9 -25.7 0;
    77.9 -7.4 0;
    69.7 1.9 0;
    48.9 2.1 0];
speed = [30;30;30;30];
smoothTrajectory(car1, waypoints, speed);

function output = getDetectorOutput(sensor)

if isa(sensor, 'visionDetectionGenerator')
    output = sensor.DetectorOutput;
elseif isa(sensor, 'lidarPointCloudGenerator')
    output = 'PointCloud';
elseif isa(sensor, 'insSensor')
    output = 'INSMeasurement';
else
    output = 'Objects only';
end

